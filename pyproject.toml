[tool.setuptools]
include-package-data = true
[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"
[project]
name = "hilary"
version = "1.2.3"
requires-python = ">=3.9"
dependencies = [
        "numpy>=1.20.0,<2",
        "openpyxl>=3.1,<4",
        "pandas>=2.2,<3",
        "scipy>=1.6,<2",
        "structlog>=22.3.0,<23",
        "textdistance>=4.6,<5",
        "tqdm>=4.66,<5",
        "typer>=0.9,<1",
        "atriegc>=0.0.3,<1.0.0",
        "scipy>1.11,<2",
]
authors = [{name = "Natanael Spisak", email = "natanael.spisak@gmail.com"},
           {name = "Gabriel Athènes", email = "gabriel.athenes@polytechnique.edu"}]
maintainers = [{name = "Gabriel Athènes", email = "gabriel.athenes@polytechnique.edu"},{name = "Giulio Isacchini", email = "giulioisac@gmail.com"}]
description = ''
readme = "README.md"
license = {file = "LICENSE"}
classifiers=[
            'Development Status :: 3 - Alpha',
            'Intended Audience :: Developers',
            'Intended Audience :: Healthcare Industry',
            'Intended Audience :: Science/Research',
            'Topic :: Scientific/Engineering :: Bio-Informatics',
            'Topic :: Scientific/Engineering :: Physics',
            'Topic :: Scientific/Engineering :: Medical Science Apps.',
            'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
            'Natural Language :: English',
            'Programming Language :: Python :: 3.9',
            'Programming Language :: Python :: 3.10',
            'Programming Language :: Python :: 3.11',
            'Programming Language :: Python :: 3.12']
[project.urls]
Homepage = "https://github.com/statbiophys/hilary"
#Documentation = "https://sonnia.readthedocs.io/en/latest/index.html"
[project.scripts]
infer-lineages='hilary.__main__:app'

[dependency-groups]
dev = [
    "ruff>=0.9.2",
]
[tool.setuptools.packages.find]
include = ["hilary*"]
exclude=["data_with_scripts*"]
namespaces = false

[tool.ruff]
line-length = 88
fix = true
exclude = [
  "__init__.py",
  "data_with_scripts/",
  "__main__.py",'compatible.py'
]

[tool.ruff.lint]
select = [
  "ANN", # flake8-annotations
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "E", # pycodestyle
  "EM", # flake8-errmsg
  "F", # pyflakes
  "FA", # flake8-future-annotations
  "I", # isort
  "ICN", # flake8-import-conventions
  "INT", # flake8-gettext
  "PERF", # perflint
  "PIE", # flake8-pie
  "PT", # flake8-pytest-style
  "PYI", # flake8-pyi
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W", # pycodestyle
]

ignore = [
  "ANN401", # Dynamically typed expressions (Any) are disallowed
  "D401", # Relax NumPy docstring convention: first line should be imperative
  "E501", # Line length regulated by formatter
  "PT011", # pytest.raises is too broad, set match or use a more specific exception
  "PYI041", # Use float instead of int | float
  "RUF022", # `__all__` is not sorted
  "RUF005", # Consider expression instead of concatenation
  "SIM102", # Use a single `if` statement instead of nested `if` statements
  "SIM108", # Use ternary operator
  "SIM114", # Combine `if` branches
  "TD002", # Missing author in TODO
  "TD003", # Missing issue link on the line following this TODO
  "TRY003", # Avoid specifying long messages outside the exception class
  "ANN001","W505"
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
